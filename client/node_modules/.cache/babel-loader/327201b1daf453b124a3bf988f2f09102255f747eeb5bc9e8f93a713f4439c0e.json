{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\themi\\\\Downloads\\\\Collaborative-Text-Editor\\\\Collaborative-Text-Editor\\\\client\\\\src\\\\TextEditor.js\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from 'react';\nimport React from 'react';\nimport Quill from \"quill\";\nimport \"quill/dist/quill.snow.css\";\nimport { io } from 'socket.io-client';\n\n//Quill Toolbar Configurations\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOOLBAR = [[{\n  header: [1, 2, 3, 4, 5, 6, false]\n}], [{\n  font: []\n}], [{\n  list: \"ordered\"\n}, {\n  list: \"bullet\"\n}], [\"bold\", \"italic\", \"underline\"], [{\n  color: []\n}, {\n  background: []\n}], [{\n  script: \"sub\"\n}, {\n  script: \"super\"\n}], [{\n  align: []\n}], [\"image\", \"blackquote\", \"code-block\"], [\"clean\"]];\nexport default function TextEditor() {\n  _s();\n  //Set state to be able to connect to sockets\n  const [socket, setSocket] = useState();\n  const [quill, setQuill] = useState();\n  useEffect(() => {\n    const s = io(\"http://localhost:3001\"); // connects to the server url that had been declared\n    setSocket(s);\n    return () => {\n      //disconnect from our server after connections done\n      socket.disconnect();\n    };\n  }, []);\n  const wrapperRef = useRef();\n  useEffect(() => {\n    const editor = document.createElement('div');\n    wrapperRef.current.append(editor); //editor is put inside wrapperRef\n    new Quill(editor, {\n      theme: \"snow\",\n      modules: {\n        toolbar: TOOLBAR\n      }\n    }); //quill is stated in editor \n\n    return () => {\n      wrapperRef.innerHTML = \"\"; //clears everything out\n    };\n  }, []); //useEffect is used here so the new instance of quill only run once\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    ref: wrapperRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 12\n  }, this); //makes the header \n}\n_s(TextEditor, \"V/9DCmD/CWrcoxrEt+IMxSW3Qh0=\");\n_c = TextEditor;\nvar _c;\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"names":["useCallback","useEffect","useState","React","Quill","io","TOOLBAR","header","font","list","color","background","script","align","TextEditor","socket","setSocket","quill","setQuill","s","disconnect","wrapperRef","useRef","editor","document","createElement","current","append","theme","modules","toolbar","innerHTML"],"sources":["C:/Users/themi/Downloads/Collaborative-Text-Editor/Collaborative-Text-Editor/client/src/TextEditor.js"],"sourcesContent":["import { useCallback, useEffect, useState} from 'react'\r\nimport React from 'react'\r\nimport Quill from \"quill\"\r\nimport \"quill/dist/quill.snow.css\"\r\nimport {io} from 'socket.io-client'\r\n\r\n//Quill Toolbar Configurations\r\nconst TOOLBAR =  [\r\n    [{ header: [1,2,3,4,5,6,false]}],\r\n    [{font : []}],\r\n    [{list: \"ordered\"}, {list: \"bullet\"}],\r\n    [\"bold\", \"italic\" , \"underline\"],\r\n    [{color: []} , {background: []}],\r\n    [{script:\"sub\"}, {script: \"super\"}],\r\n    [{align: []}],\r\n    [\"image\" , \"blackquote\" , \"code-block\"],\r\n    [\"clean\"],\r\n]\r\nexport default function TextEditor(){ \r\n    //Set state to be able to connect to sockets\r\n    const [socket, setSocket] = useState()\r\n    const [quill, setQuill] = useState()\r\n\r\n    useEffect(()    => {\r\n        const s = io(\"http://localhost:3001\")  // connects to the server url that had been declared\r\n        setSocket(s)\r\n        \r\n        return() => {               //disconnect from our server after connections done\r\n            socket.disconnect()\r\n        }\r\n    }, [])\r\n\r\n    const wrapperRef = useRef()\r\n        useEffect(() => {\r\n        const editor = document.createElement('div')\r\n        wrapperRef.current.append(editor) //editor is put inside wrapperRef\r\n        new Quill(editor, {theme: \"snow\", modules: {toolbar: TOOLBAR}}) //quill is stated in editor \r\n\r\n        return() =>{ \r\n            wrapperRef.innerHTML = \"\" //clears everything out\r\n        }\r\n    }, [])                                 //useEffect is used here so the new instance of quill only run once\r\n    return <div className=\"container\" ref={wrapperRef}></div> //makes the header \r\n} "],"mappings":";;AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACvD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,2BAA2B;AAClC,SAAQC,EAAE,QAAO,kBAAkB;;AAEnC;AAAA;AACA,MAAMC,OAAO,GAAI,CACb,CAAC;EAAEC,MAAM,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,KAAK;AAAC,CAAC,CAAC,EAChC,CAAC;EAACC,IAAI,EAAG;AAAE,CAAC,CAAC,EACb,CAAC;EAACC,IAAI,EAAE;AAAS,CAAC,EAAE;EAACA,IAAI,EAAE;AAAQ,CAAC,CAAC,EACrC,CAAC,MAAM,EAAE,QAAQ,EAAG,WAAW,CAAC,EAChC,CAAC;EAACC,KAAK,EAAE;AAAE,CAAC,EAAG;EAACC,UAAU,EAAE;AAAE,CAAC,CAAC,EAChC,CAAC;EAACC,MAAM,EAAC;AAAK,CAAC,EAAE;EAACA,MAAM,EAAE;AAAO,CAAC,CAAC,EACnC,CAAC;EAACC,KAAK,EAAE;AAAE,CAAC,CAAC,EACb,CAAC,OAAO,EAAG,YAAY,EAAG,YAAY,CAAC,EACvC,CAAC,OAAO,CAAC,CACZ;AACD,eAAe,SAASC,UAAU,GAAE;EAAA;EAChC;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,EAAE;EACtC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,EAAE;EAEpCD,SAAS,CAAC,MAAS;IACf,MAAMkB,CAAC,GAAGd,EAAE,CAAC,uBAAuB,CAAC,EAAE;IACvCW,SAAS,CAACG,CAAC,CAAC;IAEZ,OAAM,MAAM;MAAgB;MACxBJ,MAAM,CAACK,UAAU,EAAE;IACvB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,UAAU,GAAGC,MAAM,EAAE;EACvBrB,SAAS,CAAC,MAAM;IAChB,MAAMsB,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC5CJ,UAAU,CAACK,OAAO,CAACC,MAAM,CAACJ,MAAM,CAAC,EAAC;IAClC,IAAInB,KAAK,CAACmB,MAAM,EAAE;MAACK,KAAK,EAAE,MAAM;MAAEC,OAAO,EAAE;QAACC,OAAO,EAAExB;MAAO;IAAC,CAAC,CAAC,EAAC;;IAEhE,OAAM,MAAK;MACPe,UAAU,CAACU,SAAS,GAAG,EAAE,EAAC;IAC9B,CAAC;EACL,CAAC,EAAE,EAAE,CAAC,EAAiC;EACvC,oBAAO;IAAK,SAAS,EAAC,WAAW;IAAC,GAAG,EAAEV;EAAW;IAAA;IAAA;IAAA;EAAA,QAAO,EAAC;AAC9D;AAAC,GAzBuBP,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}