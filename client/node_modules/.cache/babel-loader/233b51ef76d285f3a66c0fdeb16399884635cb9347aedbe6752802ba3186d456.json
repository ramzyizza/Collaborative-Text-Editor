{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\themi\\\\Downloads\\\\Collaborative-Text-Editor\\\\Collaborative-Text-Editor\\\\client\\\\src\\\\TextEditor.js\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from 'react';\nimport React from 'react';\nimport Quill from \"quill\";\nimport \"quill/dist/quill.snow.css\";\nimport { io } from 'socket.io-client';\n\n//Quill Toolbar Configurations\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOOLBAR = [[{\n  header: [1, 2, 3, 4, 5, 6, false]\n}], [{\n  font: []\n}], [{\n  list: \"ordered\"\n}, {\n  list: \"bullet\"\n}], [\"bold\", \"italic\", \"underline\"], [{\n  color: []\n}, {\n  background: []\n}], [{\n  script: \"sub\"\n}, {\n  script: \"super\"\n}], [{\n  align: []\n}], [\"image\", \"blackquote\", \"code-block\"], [\"clean\"]];\nexport default function TextEditor() {\n  _s();\n  //Set state to be able to connect to sockets\n  const [socket, setSocket] = useState();\n  const [quill, setQuill] = useState();\n  useEffect(() => {\n    const s = io(\"http://localhost:3001\"); // connects to the server url that had been declared on server.js\n    setSocket(s); //initiate the socket to variable S\n\n    return () => {\n      //disconnect from our server when no longer needed\n      s.disconnect();\n    };\n  }, []);\n\n  //Function to detect changes on the documents using delta API from Quill\n  useEffect(() => {\n    //Check if socket or quill appears or not, otherwise return\n    if (quill == null || socket == null) return;\n    const handler = (delta, oldDelta, source) => {\n      //If source changes not by user, return nothing\n      if (source !== 'user') return;\n      //send the changes (delta) to the server\n      socket.emit(\"send-changes\", delta); //delta denoted the subset of changes\n    };\n\n    quill.on('text-change', handler);\n    return () => {\n      quill.off(\"text-change\", handler);\n    };\n  }, [socket, quill]);\n  const wrapperRef = useCallback(wrapper => {\n    if (wrapper == null) return;\n    wrapper.innerHTML = \"\";\n    const editor = document.createElement('div');\n    wrapperRef.append(editor); //editor is put inside wrapperRef\n    const q = new Quill(editor, {\n      theme: \"snow\",\n      modules: {\n        toolbar: TOOLBAR\n      }\n    }); //quill is stated in editor \n    setQuill(q);\n  }, []);\n  useEffect(() => {\n    return () => {\n      wrapperRef.innerHTML = \"\"; //clears everything out\n    };\n  }, []); //useEffect is used here so the new instance of quill only run once\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    ref: wrapperRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 12\n  }, this); //makes the header \n}\n_s(TextEditor, \"v4UtDHo1UlAwAuVl/hoqpQPVsAo=\");\n_c = TextEditor;\nvar _c;\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"names":["useCallback","useEffect","useState","React","Quill","io","TOOLBAR","header","font","list","color","background","script","align","TextEditor","socket","setSocket","quill","setQuill","s","disconnect","handler","delta","oldDelta","source","emit","on","off","wrapperRef","wrapper","innerHTML","editor","document","createElement","append","q","theme","modules","toolbar"],"sources":["C:/Users/themi/Downloads/Collaborative-Text-Editor/Collaborative-Text-Editor/client/src/TextEditor.js"],"sourcesContent":["import { useCallback, useEffect, useState} from 'react'\r\nimport React from 'react'\r\nimport Quill from \"quill\"\r\nimport \"quill/dist/quill.snow.css\"\r\nimport {io} from 'socket.io-client'\r\n\r\n//Quill Toolbar Configurations\r\nconst TOOLBAR =  [\r\n    [{ header: [1,2,3,4,5,6,false]}],\r\n    [{font : []}],\r\n    [{list: \"ordered\"}, {list: \"bullet\"}],\r\n    [\"bold\", \"italic\" , \"underline\"],\r\n    [{color: []} , {background: []}],\r\n    [{script:\"sub\"}, {script: \"super\"}],\r\n    [{align: []}],\r\n    [\"image\" , \"blackquote\" , \"code-block\"],\r\n    [\"clean\"],\r\n]\r\nexport default function TextEditor(){ \r\n    //Set state to be able to connect to sockets\r\n    const [socket, setSocket] = useState()\r\n    const [quill, setQuill] = useState()\r\n\r\n    useEffect(()    => {\r\n        const s = io(\"http://localhost:3001\")  // connects to the server url that had been declared on server.js\r\n        setSocket(s)                           //initiate the socket to variable S\r\n\r\n        return() => {                          //disconnect from our server when no longer needed\r\n            s.disconnect()\r\n        }\r\n    }, [])\r\n\r\n    //Function to detect changes on the documents using delta API from Quill\r\n    useEffect(() => {\r\n        //Check if socket or quill appears or not, otherwise return\r\n        if(quill == null || socket == null ) return\r\n\r\n        const handler = (delta, oldDelta, source) => {\r\n            //If source changes not by user, return nothing\r\n            if (source !== 'user') return\r\n            //send the changes (delta) to the server\r\n            socket.emit(\"send-changes\", delta) //delta denoted the subset of changes\r\n        }\r\n        quill.on('text-change', handler)\r\n        \r\n        return() => {\r\n            quill.off(\"text-change\", handler)\r\n        }\r\n    }, [socket, quill])\r\n\r\n    const wrapperRef = useCallback(wrapper => {\r\n        if (wrapper == null) return\r\n        wrapper.innerHTML = \"\"\r\n        const editor = document.createElement('div')\r\n        wrapperRef.append(editor) //editor is put inside wrapperRef\r\n        const q = new Quill(editor, {theme: \"snow\", modules: {toolbar: TOOLBAR}}) //quill is stated in editor \r\n        setQuill(q)\r\n    }, [])\r\n\r\n\r\n        useEffect(() => {\r\n\r\n        return() =>{ \r\n            wrapperRef.innerHTML = \"\" //clears everything out\r\n        }\r\n    }, [])                                 //useEffect is used here so the new instance of quill only run once\r\n    return <div className=\"container\" ref={wrapperRef}></div> //makes the header \r\n} "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}